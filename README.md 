# Vittavento Inventory Management System

Система учета фурнитуры и комплектующих для компании Vittavento.

## Возможности v0.2.0

### Основной функционал
- ✅ Учет товаров на складе
- ✅ Приход и списание товаров
- ✅ Сканирование штрихкодов (камера + ручной сканер)
- ✅ Статистика операций
- ✅ Поиск по артикулу/штрихкоду
- ✅ История операций

### Новое в v0.2.0
- ✅ **Контроль минимальных остатков** - установка минимального количества для каждого товара
- ✅ **Страница отчета о низких остатках** - детальная информация о товарах, требующих пополнения
- ✅ **Визуальные индикаторы** - подсветка товаров с низким остатком
- ✅ **Уведомления** - всплывающие оповещения о критически низких остатках
- ✅ **Улучшенный сканер** - выбор операции (приход/списание) перед сканированием
- ✅ **История сканирований** - последние 5 операций через сканер
- ✅ **Быстрые операции** - улучшенное модальное окно для операций со сканером

## Установка

1. Клонируйте репозиторий:
```bash
git clone https://github.com/Larnaka2002/vittavento-inventory.git
cd vittavento-inventory
```

2. Создайте виртуальное окружение:
```bash
python -m venv venv
source venv/bin/activate  # Для Mac/Linux
# или
venv\Scripts\activate  # Для Windows
```

3. Установите зависимости:
```bash
pip install -r requirements.txt
```

4. Запустите приложение:
```bash
python app.py
```

5. Откройте в браузере: http://localhost:5090

## Обновление с v0.1.x до v0.2.0

Если у вас уже установлена предыдущая версия, выполните миграцию БД:

```bash
python migration_add_min_quantity.py
```

## Использование

### Сканирование штрихкодов
1. Выберите режим операции (Приход/Списание)
2. Нажмите "Включить камеру" или используйте ручной сканер
3. Отсканируйте штрихкод товара
4. Введите количество и подтвердите операцию

### Контроль остатков
- При добавлении товара установите минимальный остаток
- Товары с остатком ≤ минимального подсвечиваются желтым
- Страница "Низкий остаток" показывает все товары, требующие пополнения

## Технологии
- **Backend**: Flask, SQLAlchemy
- **Database**: SQLite
- **Frontend**: Bootstrap 5, JavaScript
- **Сканер**: ZXing библиотека

## Структура проекта
```
vittavento-inventory/
├── app.py                          # Основное приложение
├── migration_add_min_quantity.py   # Миграция для v0.2.0
├── requirements.txt                # Зависимости
├── database/
│   └── inventory.db               # База данных
└── templates/
    ├── index.html                 # Главная страница
    └── low_stock.html             # Отчет о низких остатках
```

## API Endpoints

- `GET /` - Главная страница
- `GET /low_stock` - Страница низких остатков
- `GET /api/items` - Список всех товаров
- `POST /api/items` - Добавить товар
- `GET /api/items/<id>` - Получить товар
- `PUT /api/items/<id>` - Обновить товар
- `DELETE /api/items/<id>` - Удалить товар
- `GET /api/items/barcode/<barcode>` - Найти товар по штрихкоду
- `GET /api/low_stock` - Товары с низким остатком
- `POST /api/operations` - Добавить операцию
- `GET /api/operations` - История операций
- `GET /api/statistics` - Статистика
- `GET /api/statistics/low_stock` - Статистика низких остатков

## Версии

### v0.2.0 (05.06.2025)
- Добавлен контроль минимальных остатков
- Новая страница отчета о низких остатках
- Улучшен интерфейс сканера
- Исправлены ошибки

### v0.1.1
- Добавлена поддержка ручных сканеров
- Улучшена стабильность

### v0.1.0
- Первая версия системы

---

© 2025 Vittavento Inventory System